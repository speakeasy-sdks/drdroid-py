"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional



@dataclasses.dataclass
class PostEIngestEventsV2Security:
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})
    




@dataclasses.dataclass
class PostEIngestEventsV2RequestBody:
    pass



@dataclasses.dataclass
class PostEIngestEventsV2Request:
    request_body: Optional[PostEIngestEventsV2RequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    x_request_org: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-REQUEST-ORG', 'style': 'simple', 'explode': False }})
    




@dataclasses.dataclass
class PostEIngestEventsV2200ApplicationJSON:
    r"""OK"""
    




@dataclasses.dataclass
class PostEIngestEventsV2Response:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)
    post_e_ingest_events_v2_200_application_json_object: Optional[PostEIngestEventsV2200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

